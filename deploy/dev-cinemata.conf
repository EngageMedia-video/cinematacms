# Development Environment Nginx Configuration for CinemataCMS
# Handles dev.cinemata.org (main domain) and dev-uploads.cinemata.org (upload subdomain)

# Main development domain (HTTP)
server {
    listen 80;
    server_name dev.cinemata.org;

    gzip on;
    access_log /var/log/nginx/dev.cinemata.org.access.log;
    error_log  /var/log/nginx/dev.cinemata.org.error.log warn;

    # Redirect to HTTPS for security
    return 301 https://$server_name$request_uri;
}

# Upload subdomain (HTTP) - Force HTTPS
server {
    listen 80;
    server_name dev-uploads.cinemata.org;

    gzip on;
    access_log /var/log/nginx/dev-uploads.cinemata.org.access.log;
    error_log  /var/log/nginx/dev-uploads.cinemata.org.error.log warn;

    # Force HTTPS for all upload requests
    return 301 https://$server_name$request_uri;
}

# Main development domain (HTTPS)
server {
    listen 443 ssl http2;
    server_name dev.cinemata.org;

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/dev.cinemata.org-0001/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/dev.cinemata.org-0001/privkey.pem;
    ssl_dhparam /etc/nginx/dhparams/dhparams.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers on;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options SAMEORIGIN always;

    # Logging
    gzip on;
    access_log /var/log/nginx/dev.cinemata.org.access.log;
    error_log  /var/log/nginx/dev.cinemata.org.error.log warn;

    # Static files with caching
    location /static {
        alias /home/cinemata/cinematacms/static;
        expires 1y;
        add_header Cache-Control "public, immutable";

        # CORS headers for static assets
        add_header 'Access-Control-Allow-Origin' 'https://dev.cinemata.org' always;
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
    }

    # Media files (original)
    location /media/original {
        alias /home/cinemata/cinematacms/media_files/original;
        expires 1y;
        add_header Cache-Control "public";

        # CORS headers for media
        add_header 'Access-Control-Allow-Origin' 'https://dev.cinemata.org' always;
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
    }

    # Media files (processed)
    location /media {
        alias /home/cinemata/cinematacms/media_files;
        expires 1y;
        add_header Cache-Control "public";

        # CORS headers for media
        add_header 'Access-Control-Allow-Origin' 'https://dev.cinemata.org' always;
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
    }

    # Main application
    location / {
        # Standard CORS headers for main application
        add_header 'Access-Control-Allow-Origin' 'https://dev.cinemata.org' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,X-CSRFToken' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

        # Django application via uWSGI
        include /etc/nginx/uwsgi_params;
        uwsgi_pass 127.0.0.1:9000;

        # Standard timeouts
        uwsgi_read_timeout 60s;
        uwsgi_send_timeout 60s;
    }
}

# Upload subdomain (HTTPS) - Main configuration
server {
    listen 443 ssl http2;
    server_name dev-uploads.cinemata.org;

    # SSL configuration (shared certificate or separate)
    ssl_certificate /etc/letsencrypt/live/dev.cinemata.org-0001/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/dev.cinemata.org-0001/privkey.pem;
    ssl_dhparam /etc/nginx/dhparams/dhparams.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers on;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options DENY always;

    # Logging
    gzip on;
    access_log /var/log/nginx/dev-uploads.cinemata.org.access.log;
    error_log  /var/log/nginx/dev-uploads.cinemata.org.error.log warn;

    # Redirect all non-upload requests to main domain
    location / {
        return 301 https://dev.cinemata.org$request_uri;
    }

    # Large file upload configuration for chunked uploads (server-level)
    client_body_timeout 300s;
    client_header_timeout 300s;
    send_timeout 300s;

    # File upload endpoint - CORS handled by Django middleware
    location /fu/ {
        # uWSGI timeout configuration for long uploads
        uwsgi_read_timeout 300s;
        uwsgi_send_timeout 300s;
        uwsgi_connect_timeout 300s;

        # Pass to Django application (CORS handled by UploadCorsMiddleware)
        include /etc/nginx/uwsgi_params;
        uwsgi_pass 127.0.0.1:9000;
    }

    # Health check endpoint for monitoring
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
        add_header 'Access-Control-Allow-Origin' '*' always;
    }

    # Block all other paths on upload subdomain
    location ~ ^/(?!fu/|health) {
        return 301 https://dev.cinemata.org$request_uri;
    }
}