[Unit]
Description=mediacms Celery Service
After=network.target

[Service]
Type=simple
User=www-data
Group=www-data
Restart=always
RestartSec=10
Environment=APP_DIR="/home/cinemata/cinematacms"
Environment=CELERY_QUEUE="short_tasks"
# Absolute or relative path to the 'celery' command:
Environment=CELERY_BIN="/home/cinemata/bin/celery"
# App instance to use
# comment out this line if you don't use an app
Environment=CELERY_APP="cms"
# or fully qualified:
#CELERY_APP="proj.tasks:app"
# Extra command-line arguments to the worker
Environment=CELERYD_OPTS="--soft-time-limit=300 --concurrency=10"
# - %n will be replaced with the first part of the nodename.
# - %I will be replaced with the current child process index
#   and is important when using the prefork pool to avoid race conditions.
Environment=CELERYD_PID_FILE="/home/cinemata/cinematacms/pids/%n.pid"
Environment=CELERYD_LOG_FILE="/home/cinemata/cinematacms/logs/%N.log"
Environment=CELERYD_LOG_LEVEL="INFO"
Environment=APP_DIR="/home/cinemata/cinematacms"
Environment=PYTHONPATH="/home/cinemata/cinematacms"
WorkingDirectory=/home/cinemata/cinematacms

ExecStart=/bin/sh -c '${CELERY_BIN} -A ${CELERY_APP} worker --pidfile=${CELERYD_PID_FILE} --logfile=${CELERYD_LOG_FILE} --loglevel=${CELERYD_LOG_LEVEL} ${CELERYD_OPTS} -Q ${CELERY_QUEUE}'

ExecStop=/bin/kill -s TERM $MAINPID

ExecReload=/bin/kill -s HUP $MAINPID

[Install]
WantedBy=multi-user.target
